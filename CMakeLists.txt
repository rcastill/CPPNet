cmake_minimum_required(VERSION 2.8.4)
project(CPPNet)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
set(EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin")
set(LIBRARY_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/lib")

add_library(NetCore dev/core.cc)
add_library(Address dev/address.cc)
add_library(DatagramSocket dev/dgsocket.cc)
add_library(ByteBuffer dev/bytebuffer.cc)
add_library(Packet dev/packet.cc)
add_library(ServerPacket dev/spacket.cc)
add_library(ClientsPacket dev/cpacket.cc)
add_library(ConnectionPacket dev/connpacket.cc)
add_library(BackendClient bclient.cc)
add_library(Bitfield4Bytes dev/bitfield4bytes.cc)
add_library(GamePacket dev/gpacket.cc)

target_link_libraries(DatagramSocket Address Packet ByteBuffer)
target_link_libraries(Packet ByteBuffer Address)
target_link_libraries(ServerPacket Packet)
target_link_libraries(BackendClient ClientsPacket)

set(SOURCE_FILES main.cc)
add_executable(CPPNet ${SOURCE_FILES})
add_executable(SClient sclient.cc)
add_executable(Server server.cc)
add_executable(Lab lab.cc)

target_link_libraries(CPPNet NetCore DatagramSocket)
target_link_libraries(SClient NetCore DatagramSocket ClientsPacket ServerPacket ConnectionPacket)
target_link_libraries(Server DatagramSocket Address Packet NetCore ServerPacket ClientsPacket ConnectionPacket BackendClient)
target_link_libraries(Lab ByteBuffer Address Packet)

#add_definitions(-DINCLUDE_ADITIONAL_MUTEX) // makes scoped_guard, unique_lock, etc, available in mutex
#add_definitions(-Wl --allow-multiple-definition)

if (WIN32)
target_link_libraries(CPPNet wsock32 ws2_32)
target_link_libraries(Address wsock32 ws2_32)
target_link_libraries(SClient wsock32 ws2_32)
target_link_libraries(ByteBuffer wsock32 ws2_32)
add_definitions(-DWIN32)
endif()

if(UNIX)
target_link_libraries(Server pthread)
add_definitions(-DUNIX)
endif()